scene = {
	primitives = {
		tetrahedron = {
			type = mesh
			filename = "/modules/opengltest/tetrahedron.store"
		}
		
		effect = {
			type = particles
			num = 50
			lifetime = 3.0
			positionStd = (0.5, 0.0, 0.5)
			velocityStd = (0.0, 0.1, 0.0)
			angularVelocityStd = 0.5
		}
	}
	
	textures = {
		checkerboard = "/modules/opengltest/texture.png"
	}
	
	parameters = {
		perspective = ((1 0 0 0)(0 1 0 0)(0 0 1 0)(0 0 0 1))
		lightPosition = (-10.0, 50.0, -50.0)
		lightColor = (1.0, 1.0, 1.0, 1.0)
		ambient = 0.25
		specular = 0.9
	}
	
	materials = {
		phong_vertexcolor = {
			vertex_shader = "/modules/opengltest/phong.glslv"
			fragment_shader = "/modules/opengltest/phong_vertexcolor.glslf"
			uniforms = {
				perspective = perspective
				lightPosition = lightPosition
				lightColor = lightColor
				ambient = ambient
				specular = specular
			}
		}
		
		phong_texture = {
			vertex_shader = "/modules/opengltest/phong.glslv"
			fragment_shader = "/modules/opengltest/phong_texture.glslf"
			uniforms = {
				perspective = perspective
				lightPosition = lightPosition
				lightColor = lightColor
				ambient = ambient
				specular = specular
				texture = checkerboard
			}
		}
		
		particle = {
			vertex_shader = "/modules/particle/particle.glslv"
			fragment_shader = "/modules/particle/particle.glslf"
			uniforms = {
				perspective = perspective
				texture = checkerboard
			}
		}	
	}
	
	models = {
		tetrahedron = {
			primitive = tetrahedron
			material = phong_texture
			translation = (0.0, 0.0, 1.5)
			scaleX = 0.75
			scaleY = 0.75
			scaleZ = 0.75
		}
		
		tetrahedron2 = {
			primitive = tetrahedron
			material = phong_vertexcolor
			translation = (0.0, 0.25, 3.0)
			rotationX = 3.14159265359 // rotation by pi = 180 degrees
		}
		
		particles = {
			primitive = effect
			material = particle
			translation = (2.5, 0.0, 2.5)
		}		
	}
}
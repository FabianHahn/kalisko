scene = {
	primitives = {
		tetrahedron = {
			type = mesh
			filename = "/modules/freegluttest/tetrahedron.store"
		}

		effect = {
			type = particles
			num = 50
			lifetime = 3.0
			positionStd = (0.5, 0.0, 0.5)
			velocityStd = (0.0, 0.1, 0.0)
			angularVelocityStd = 0.5
		}

		heightmap = {
			type = heightmap
			heightmap = "/modules/freegluttest/texture.png"
		}

		landscape = {
			type = landscape
			width = 512
			height = 512
			worleyPoints = 16
			fbmFrequency = 4
			fbmPersistance = 0.5
			fbmDepth = 6
			erosionThermalIterations = 0
			erosionThermalTalusAngle = 40
			erosionHydraulicIterations = 0
		}
	}

	textures = {
		checkerboard = {
			type = file
			filename = "/modules/freegluttest/texture.png"
		}
		flames = {
			type = imagesynth
			width = 256
			height = 256
			channels = 3
			synthesizer = fBm
			parameters = {
				colorLow = (1.0, 0.0, 0.0)
				colorHigh = (1.0, 1.0, 0.0)
			}
		}		
		multi = {
			type = array
			textures = ({ // ground texture
					type = imagesynth
					width = 128
					height = 128
					channels = 3
					synthesizer = turbulence
					parameters = {
						frequencyX = 2.5
						frequencyY = 2.5
						persistence = 0.75
						depth = 6
						colorLow = (0.3, 0.25, 0.2)
						colorHigh = (0.376, 0.341, 0.325)
					}
				},{ // snow texture
					type = imagesynth
					width = 128
					height = 128
					channels = 3
					synthesizer = fBm
					parameters = {
						frequencyX = 5
						frequencyY = 5
						colorLow = (0.9, 0.9, 0.9)
						colorHigh = (1.0, 1.0, 1.0)
					}
				}
			)
		}
	}

	parameters = {
		lightPosition = (-10.0, 50.0, -50.0)
		lightColor = (1.0, 1.0, 1.0, 1.0)
		ambient = 0.25
		specular = 0.4
		slopeExponent = 2.5
	}

	materials = {
		phong_vertexcolor = {
			vertex_shader = "/modules/mesh_opengl/phong.glslv"
			fragment_shader = "/modules/mesh_opengl/phong_vertexcolor.glslf"
			uniforms = {
				lightPosition = lightPosition
				lightColor = lightColor
				ambient = ambient
				specular = specular
			}
		}

		phong_texture = {
			vertex_shader = "/modules/mesh_opengl/phong.glslv"
			fragment_shader = "/modules/mesh_opengl/phong_texture.glslf"
			uniforms = {
				lightPosition = lightPosition
				lightColor = lightColor
				ambient = ambient
				specular = specular
				texture = flames
			}
		}

		heightmap = {
			vertex_shader = "/modules/heightmap/heightmap.glslv"
			fragment_shader = "/modules/heightmap/heightmap.glslf"
			uniforms = {
				lightPosition = lightPosition
				lightColor = lightColor
				ambient = ambient
				specular = specular
				texture = multi
			}
		}
		
		landscape = {
			vertex_shader = "/modules/landscape/landscape.glslv"
			fragment_shader = "/modules/landscape/landscape.glslf"
			uniforms = {
				lightPosition = lightPosition
				lightColor = lightColor
				ambient = ambient
				specular = specular
				texture = multi
				slopeExponent = slopeExponent
			}
		}		

		particle = {
			vertex_shader = "/modules/particle/particle.glslv"
			fragment_shader = "/modules/particle/particle.glslf"
			uniforms = {
				texture = checkerboard
			}
		}
	}

	models = {
		tetrahedron = {
			primitive = tetrahedron
			material = phong_texture
			translation = (0.0, 0.0, 1.5)
			scaleX = 0.75
			scaleY = 0.75
			scaleZ = 0.75
		}

		tetrahedron2 = {
			primitive = tetrahedron
			material = phong_vertexcolor
			translation = (0.0, 0.25, 3.0)
			rotationX = 3.14159265359 // rotation by pi = 180 degrees
		}

		particles = {
			primitive = effect
			material = particle
			translation = (2.5, 0.0, 2.5)
		}

		heightmap = {
			primitive = heightmap
			material = heightmap
			translation = (2.0, -1.0, 2.0)
			scaleY = 0.2
		}

		landscape = {
			primitive = landscape
			material = landscape
			translation = (-2.0, -1.0, 2.0)
			scaleY = 0.2
		}
	}
}

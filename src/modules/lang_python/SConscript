Import('module')

if not module.GetOption('clean'):
	conf = Configure(module)
	
	if conf.env['PLATFORM'] == 'posix':
		conf.env.ParseConfig('python-config --cflags')
		if not conf.CheckLib('python2.6'):
				print('Error: Could not find library python2.6!')
				Exit(1)
	elif conf.env['PLATFORM'] == 'win32':
		import _winreg
		import os
		try:
			pyRegistryInstallPath = _winreg.OpenKey(_winreg.HKEY_LOCAL_MACHINE, r"SOFTWARE\Python\PythonCore\2.6\InstallPath")
			pyInstallPath = _winreg.QueryValue(pyRegistryInstallPath, "") # Gets the "(Default)" value from registry
			conf.env.Append(CPPPATH = [os.path.join(pyInstallPath, 'include')])
			conf.env.Append(LIBPATH = [os.path.join(pyInstallPath, 'libs')])
		except Exception, (error):
			print('Error: Could not find Python\'s installation path. Error: %s' % (error))
			Exit(1)
			
		# Please keep in mind that the lib we use under Windows has a diffrent
		# name as for other platforms.
		if not conf.CheckLib('python26'):
			print('Error: Could not find library python2.6!')
			Exit(1)
			
		conf.env.Append(LIBS = ['python26'])
			
	module = conf.Finish()

module.SharedLibrary('../lang_python', Glob('*.c'))